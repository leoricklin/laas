<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Copyright 2010 The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<configuration>
  <property>
    <name>hbase.rootdir</name>
    <value>hdfs://d241288b.cht.local:8020/hbase</value>
    <description>The directory shared by region servers.</description>
  </property>

  <property>
    <name>hbase.cluster.distributed</name>
    <value>true</value>
    <description>The mode the cluster will be in. Possible values are
      false: standalone and pseudo-distributed setups with managed Zookeeper
      true: fully-distributed with unmanaged Zookeeper Quorum (see hbase-env.sh)
    </description>
  </property>

  <property> 
    <name>hbase.hlog.split.skip.errors</name> 
    <value>false</value> 
    <description>
    When set to true, the default, any error encountered splitting will be logged, 
    the problematic WAL will be moved into the .corrupt directory under the hbase rootdir, 
    and processing will continue. If set to false, the exception will be propagated and 
    the split logged as failed.
    </description>
  </property>
   
  <property>
    <name>hfile.min.blocksize.size</name>
    <value>65536</value>
    <description>
      Minimum store file block size. 
      The smaller you make this, the bigger your index and the less you fetch on a random-access.
      Set size down if you have small cells and want faster random-access of individual cells.
   </description>
  </property>

  <property>
    <name>hbase.hstore.compactionThreshold</name>
    <value>3</value>
    <description>
     If more than this number of HStoreFiles in any one HStore
     (one HStoreFile is written per flush of memstore) then a compaction
     is run to rewrite all HStoreFiles files as one.  Larger numbers
     put off compaction but when it runs, it takes longer to complete.
     During a compaction, updates cannot be flushed to disk.  Long
     compactions require memory sufficient to carry the logging of
     all updates across the duration of the compaction.
     If too large, clients timeout during compaction.
    </description>
  </property>
   
<!-- /* Hbase Zookeeper Setting */ -->
  <property>
    <name>hbase.zookeeper.property.dataDir</name>
    <value>/var/zookeeper/</value>
    <description>Property from ZooKeeper's config zoo.cfg. The directory where the snapshot is stored. </description>
  </property>

  <property>
    <name>hbase.zookeeper.property.clientPort</name>
    <value>2181</value>
    <description>Property from ZooKeeper's config zoo.cfg.
      The port at which the clients will connect.
    </description>
  </property>

  <property>
    <name>hbase.zookeeper.quorum</name>
    <value>d241288b.cht.local</value>
    <description>Comma separated list of servers in the ZooKeeper Quorum.
      For example, "host1.mydomain.com,host2.mydomain.com,host3.mydomain.com".
      By default this is set to localhost for local and pseudo-distributed modes
      of operation. For a fully-distributed setup, this should be set to a full
      list of ZooKeeper quorum servers. If HBASE_MANAGES_ZK is set in hbase-env.sh
      this is the list of servers which we will start/stop ZooKeeper on.
    </description>
  </property>

  <property>
    <name>zookeeper.session.timeout</name>
    <value>60000</value>
    <description>ZooKeeper session timeout. This option is not used by HBase
     directly, it is for the internals of ZooKeeper. HBase merely passes it in
     whenever a connection is established to ZooKeeper. It is used by ZooKeeper
     for hearbeats. In milliseconds.
    </description>
  </property>
 
<!-- /* Hbase Regions Server Setting */ -->
  <property>
    <name>hbase.hregion.max.filesize</name>
    <value>268435456</value>
    <description>
      Maximum HStoreFile size. If any one of a column families' HStoreFiles has
      grown to exceed this value, the hosting HRegion is split in two. Default: 256M.
    </description>
  </property>
 
  <property>
    <name>hbase.hregion.memstore.block.multiplier</name>
    <value>2</value>
    <description>
     Block updates if memstore has hbase.hregion.block.memstore
     time hbase.hregion.flush.size bytes.  Useful preventing
     runaway memstore during spikes in update traffic.  Without an
     upper-bound, memstore fills such that when it flushes the
     resultant flush files take a long time to compact or split, or
     worse, we OOME.
    </description>
  </property>

  <property>
    <name>hbase.hregion.memstore.flush.size</name>
    <value>67108864</value>
    <description>
     Memstore will be flushed to disk if size of the memstore
     exceeds this number of bytes.  Value is checked by a thread that runs
     every hbase.server.thread.wakefrequency.
    </description>
  </property>
    
  <property>
    <name>hbase.hregion.majorcompaction</name>
    <value>86400000</value>
    <description>
      The time (in miliseconds) between 'major' compactions of all HStoreFiles in a region. 
      Default: 1 day. Set to 0 to disable automated major compactions.
    </description>
  </property>
  
  <property>
    <name>hbase.regionserver.handler.count</name>
    <value>10</value>
    <description>
      Count of RPC Server instances spun up on RegionServers.
      Same property is used by the HMaster for count of master handlers.
    </description>
  </property>
  
  <property>
    <name>hbase.regionserver.global.memstore.upperLimit</name>
    <value>0.4</value>
    <description>Maximum size of all memstores in a region server before new 
     updates are blocked and flushes are forced. Defaults to 40% of heap
    </description>
  </property>
   
  <property>
    <name>hbase.regionserver.optionallogflushinterval</name>
    <value>10000</value>
    <description>
      Sync the HLog to the HDFS after this interval if it has not accumulated enough 
      entries to trigger a sync. Default 10 seconds. Units:  milliseconds.
    </description>
  </property>

  <property>
    <name>hbase.client.scanner.caching</name>
    <value>1</value>
    <description>
      Number of rows that will be fetched when calling next on a scanner 
      if it is not served from memory. Higher caching values will enable faster 
      scanners but will eat up more memory and some calls of next may take longer 
      and longer times when the cache is empty.
    </description>
  </property>

  <property>
    <name>hbase.regionserver.info.bindAddress</name>
    <value>0.0.0.0</value>
  </property>



</configuration>
